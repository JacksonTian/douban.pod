#!/usr/bin/env node
var readline = require('readline');
var API = require('douban.fm.node');
var IPod = require('ipod');
var linked = require('linked');

linked().use(function (ctx, next) {
  var rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
  });

  rl.question("请输入登陆邮箱：\n", function (answer) {
    ctx.email = answer;
    // TODO: Log the answer in a database
    console.log("您的邮箱是: %s", answer);
    next();
  });
  ctx.rl = rl;
},
function (ctx, next) {
  ctx.rl.question("请输入您的密码：\n", function (answer) {
    ctx.password = answer;
    // TODO: Log the answer in a database
    console.log("您的密码: ******");
    ctx.rl.close();
    delete ctx.rl;
    next();
  });
},
function (ctx, next) {
  console.log('登陆中...');
  var api = new API(ctx.email, ctx.password);
  api.auth(function (err) {
    if (err) {
      console.log(err.message);
      process.exit(1);
    }
    next();
  });
  ctx.api = api;
},
function (ctx, next) {
  var api = ctx.api;
  var play = function () {
    api.getChannel(0, function (err, songs) {
      if (err) {
        console.log(err.message);
        process.exit(1);
      }
      var list = songs.map(function (item) {
        return item.url;
      });
      // 按列表顺序播放
      var ipod = new IPod(list, {mode: 'order'});
      ipod.play();
      ipod.on('error', function (err) {
        console.log(err.message);
        console.log(err.stack);
      });
      ipod.on('playing', function () {
        console.log('正在播放：%s', songs[ipod.currentIndex].title);
      });
      ipod.on('finish', function () {
        console.log('播放完毕');
        // 更新列表
        play();
      });
    });
  };
  console.log('开始播放...');
  play();
}).go();
